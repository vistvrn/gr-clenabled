id: clenabled_clFFT
label: OpenCL FFT
category: '[OpenCL-Enabled]'

parameters:
-   id: type
    label: Data Type
    dtype: enum
    options: [complex, float]
    option_attributes:
        datatype: ['1', '2']
        input: [complex, float]
        output: [complex, complex]
    hide: part
-   id: openCLPlatform
    label: OpenCL Platform Type
    dtype: enum
    options: ['1', '2', '3', '4']
    option_labels: [GPU, Accelerator, CPU, Any]
-   id: devices
    label: OpenCL Device
    dtype: enum
    options: ['1', '2']
    option_labels: [Any, Specific]
    option_attributes:
        hide_specific: [all, '']
-   id: platformId
    label: Platform Id
    dtype: enum
    options: ['0', '1', '2', '3']
    hide: ${ devices.hide_specific }
-   id: deviceId
    label: Device Id
    dtype: enum
    options: ['0', '1', '2', '3']
    hide: ${ devices.hide_specific }
-   id: fft_dir
    label: FFT Direction
    dtype: enum
    options: ['-1', '1']
    option_labels: [Forward, Reverse]
-   id: fft_size
    label: FFT Size
    dtype: int
    default: '1024'
-   id: window
    label: Window
    dtype: real_vector
    default: 'window.blackmanharris(1024)'
-   id: shift
    label: Shift
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: ${ 'all' if type == 'float' else 'none' }
-   id: num_streams
    label: Num Streams
    dtype: int
    default: '1'
    hide: part
-   id: setDebug
    label: Debug
    dtype: enum
    options: ['0', '1']
    option_labels: ['Off', 'On']
    hide: part

inputs:
-   domain: stream
    dtype: ${ type.input }
    vlen: ${ fft_size }
    multiplicity: ${num_streams}

outputs:
-   domain: stream
    dtype: complex
    vlen: ${ fft_size }
    multiplicity: ${num_streams}

templates:
    imports: |-
        from gnuradio.fft import window
        import clenabled
    make: |-
       % if devices == 1:
       clenabled.clFFT(${fft_size},${fft_dir},${window},${type.datatype},${openCLPlatform},1,0,0,${setDebug},${num_streams}, ${shift})
       % else:
       clenabled.clFFT(${fft_size},${fft_dir},${window},${type.datatype},${openCLPlatform},${devices},${platformId},${deviceId},${setDebug},${num_streams},${shift})
       % endif

documentation: |-

file_format: 1
