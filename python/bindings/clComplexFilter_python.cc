/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(clComplexFilter.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(2d44e406f84d372f396ed2e229dc1f03)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <clenabled/clComplexFilter.h>
// pydoc.h is automatically generated in the build directory
#include <clComplexFilter_pydoc.h>

void bind_clComplexFilter(py::module& m)
{

    using clComplexFilter    = ::gr::clenabled::clComplexFilter;


    py::class_<clComplexFilter, gr::sync_decimator,
        std::shared_ptr<clComplexFilter>>(m, "clComplexFilter", D(clComplexFilter))

        .def(py::init(&clComplexFilter::make),
           py::arg("openclPlatform"),
           py::arg("devSelector"),
           py::arg("platformId"),
           py::arg("devId"),
           py::arg("decimation"),
           py::arg("taps"),
           py::arg("nthreads") = 1,
           py::arg("setDebug") = 0,
           D(clComplexFilter,make)
        )
        




        
        .def("set_taps2",&clComplexFilter::set_taps2,       
            py::arg("taps"),
            D(clComplexFilter,set_taps2)
        )


        
        .def("taps",&clComplexFilter::taps,       
            D(clComplexFilter,taps)
        )

        ;




}








